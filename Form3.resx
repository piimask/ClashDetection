<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABkHgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAHitJ
        REFUeNrtnWdgFNXexn9JCCX00AmCF7jIhdCkCIKAKIjSO1xBipQAIldBLxcQQV4rRUUIRYqA9ICAdJUi
        qJQA0nuv0ntJIe+HFUjCnjOzu1N355kvkpjZs+c8c+ZfnwOBijJM4TZJJPGADTQkfcDORACiAP9lPw9I
        enRdZAIVCHamxv8RTic2k5hs8R9eJ/iYfzoT5M8IoxEruetm8R9eu3mHfM5E+SPSUI0ZXJcsvuuKZwNt
        yepMmH8hkq84p7j4D687LOIVxyz0FxSiP4dUL/7D6wqTqUiIM332Rg66stWtyafmOsXnFHMm0a7ISFN+
        4r6Xi//w2kcf8juTaTeEUpNZ3BAu62lOpNrw9wv3iQT+cMxCOyGIUoziL+HiX2UKzzMhxc+2UZGBHJGY
        hT/ymmMW2gFPM0jVQo5J8fOthIMicb6jimMWWhk5iWJ7ihBv6q38jb+38mCiUxEgJwChVJe+Os4wnH85
        E21FZKQZv0hMvpTGnIgArjvJjcf9vE+EM+FWQlpeZC43Je7cZ6ncORkBwOU+bpGYhZvoQHZn4q2AIMoS
        zQVJQGeSm4COEgEACkoDSHdZQX0yOAtgLgozmKNehHTVEACUQsjX+J7nSeMsgznIRQ/+FJp88qSOWgIo
        J5HOMpKSzmIYjUy0YA1xwmXZRW/ySv5ePQEAwmjICkka+QD9eMpZFKOQlpdYwC3hcqgp7PCMAADZhYUk
        SSSRyGY6E+4sjt4IphzjuShc/Mt8q6q0y3MCABSgHweFn32PlTQizFkk/VCEoRwXLsBtFlKbdCqJ5A0B
        AEowgrPCMVxnBi84ZqEeyEMvdgonPo5faU0WD3YSbwkAIVRlKteEYznP10Q6C6YlsvBv1hMvmPAH7KQX
        eTy6oy8EAMhAfZZKzMJDDKSQs3BaIB11+OHvCn5313GGUtjju/pKAIBsdGAjCUJabqOrF3d1kGKZKjCB
        S8LFv8h4nvWqml8LAgBE8B77heO7z880IaOzkN6hKB9zUji5t4ihFmm9ppY2BAAozhecFo7zBrOpQaiz
        nJ4hL++wW2LyraElmXzaW7QjAITwHFO4KhzvX3xDGYKcZVWHrLzOBonJt4Oe5PbxM7QlAEB6XmUJd4Qk
        OMIg/uEsrhLS8Qo/Sky+YwzRZBq1J4CLum/wu8Qs3E53cjmLLEIIlZjEZeHiX2AMZTXaSPUhAEB++rBH
        YhaupplPLy+/xTN8LjGlbjKXmhqaUvoRwPVdPpWYrzeZ54P56pfITx/2Sp+apho/NfoSAIIVdrOLjNVs
        N7M5lN6b2+iuQzhFbwKAy55ZrGDPFCagoWQ5H+YDnQKqRhDARW95EFsLj8amCKEy30l85/OMorRun24U
        AQDy0lshptGKzIG2/MUZxhkTo2dGEgBcUc0T0qjmy4FjFkbwvunxc6MJAMGUl+Y1Lnmd17AVskszaInE
        0oUcBozDeALAw8ymrJhtKEX8d/Ez0IDl0hx6fwoaNBZzCACQmdasFZazPlAsZ7UpQqjKdGkVzVeGFleb
        RwBQqm6KZz1tPKhusgHkdXTXmEE1g+vozCUAaFnfaHEoVdKuoIEJlbTmE8BV4RytQYWzhRFOZ2kt/SY6
        mVRLbwUCgKutdb6krdXG4pVhNGIV9yzaTWMVAoByl9Me3rWbeGUaqjFToZ+uhKkjtBIBQKnPMcFO4pVB
        ih210yzQUWs1AoByp/Ni6lpfpaggAzks6alfRj1L9NRbkQAQRBlGS1SKrjCF56yrUpRTKsqYwEY6kM0y
        o01NAKs0doZSkzkSs/C0NcUrlRV6+lpIbjEdddmaqtyspyEhaHXIRHPpbO7hXSuJVyopa53mC56xzGhd
        zSaX3UQkrNXEobSf/kF7K+ynQZRmNOeFi3/VYm+tYtJqPas1cRRSFK802aJ6mkFSu9Va6pr5pM0myWuP
        rdPEoaR6eo2pZolXqhdltAKy8jq/CUuzrN3EYUHxSnsZKa5mkzsqF9+aTRwZaSqNqxooXpmWl6TR65N8
        YiE3JYTKTOaKZMM/ZpsmjnC6SM1CA8QrXaKMFyWBiklUtFD+SrnZpAYlbNXEUYj+ktyqS7xSt9xqYYZI
        TL7bFjtnR32zid2aOEwRr8xFT6ko43r+baEaFs+bTezVxJGGqkw3TrwyM60kVWxJFqtiy0B9hWYTkXqP
        chPHWx4qEen7PZXFKzWosFQjyljUMpPie7OJUhPHOlpbqIlDSbwyli6+5DhcooyXbFOypFWziVITx3xL
        NXEUoB8HJCV3K2nsnVlYVFq0eIv5lipajOB9xWlQH+e3WxNHCUZIqH+dmZ6KV+bhbXbZaCPUo9lE+eVn
        pSaOEKooiFeOopS6W2kvyqgnwmggNYV8azZxNXHES5s4rGQWysUrDzNQeS5KEiOxoI8y2ELOUIiikv8I
        DSoP89CbXRIHeJ1HErX674Yd2SRxgDdTXxbRyM0KaZbMWuGQkdJmk+lU0yxLVoT/s1ETh1y88hhVxH/a
        SpBuuM5calkoT15QGhC9xzLNT/NRI1Nf3mIe0UnBvjVSPM4Bgm1ulIWOQshBF8l5XolspJNOKZG01FJM
        g1kpJtJB4McsFie4BgveHOeItsT272o2kZ3o148Cuo7ALk0cEfRht8AWWC724AZLMuRmR8OVmk3OMNyg
        ZpNc9JCWwpjdxCFXMfeaAGa6gGqaTYwtjFIqhjOriUPJFfSJAGYFgQpZstnEek0cIVSWBoM0IYDR0fAc
        CsXRm0xtNlHTxGFUQXxxhkvCwV4RIEFSiHiJcZTT2e3JSDPpIc57ec8ChzhnpDmrVR9arQ+e4n+STMj9
        VK8E1QQ4SztiJNHw4zqmgkOpyWyFZhPrVB6a2cShlBLewtus9I4Ap8hHRhOKQVzNJuK3q9WaTVyQN3Ho
        Y6koFYUcoj9PkZ553hLA5VPnphc7hB+idTmYvZpNUhLXyCaONAqyW+ceyW6FEeMbAQCKMERSQH2bhdTR
        YFmUmk1+s1SziTu4mjjk0QotmjiUMiHfU/VRBYAmBIAgyhHNBUk03LeScDXNJvYQSlESx/G1iUMpE5K6
        NFwjAoBL0ihG4vac4lOvJI2U7/uZFXviJQinsyRjkeC1PJb8vu5ltzQkwMMndY2GT6qr2eSCJKAyiYrW
        VcXQ8En1fWdxL7ulMQEAcim8qzeoflfbq9nEcyg3cVRVVa3ni22hAwFAC2s9N2/ZqNnEWyhb618qNHEE
        EckoiQaDknehEwGUo+Eyf91ezSa+Qp2/7h6+xxd0I4Bra/I8Gm6vZhOtoKaJI3Xtcg5NZLd0JQAox+z3
        0feR22O3ZhNt4UkThyezajIBHnP1gYSr7Qm3WbOJPijOcEkI5zozqUZmTbOMhhAAXGahTNJoDbuFFIlj
        nY/HQdsHIVSV5u3PsEJqWU320C02jADK9qrVKo3Mg5rKHfeVRp5nQgwkAECoQu3ek0nljwL0+ESl2r0n
        oyve1RoaTADXR8pjVg+vC4ylrP+flCVBBH3ZK7TztcmEmEAAUJI0cj37LWwZ4tUapVktXfwTfOLToRFS
        Augn236Fb1lJWzoIB5+bjtxlNXcCePGDKENnIiWzuJBxbOWBMcPRcgd4iJKMlmjv6CRpZBPIqywSWU5t
        DTIhJr0CHiO/JPiRsnYlkCA/Oi6JJG5ST5NPMukV8BiJChtYXnpTjyl8z8kAWfzMvEZ3nldot31Agv5D
        McICV9NTWJShLDDo2FhzkZaXmMokq6iSm+GCxQlGUp5vmOmtpJEtEEwFRjNHeC5BHElGD8kM82sJx2jj
        tlkiHXWozFLG8zvxfrf8RelIO2Ha9zZLOUs3o5vczNgBjvA+zZjGdbe/zUIb5jBCQc/PbshLb34QZv3j
        +ZXOdGC98QMzYwcI5gEb2cE8ulPLrZuTh168xndM54QfLH4W6tOdyoK5TmI33zKXv8x5HM3zwO+yhA00
        ohuV3MYDi/ARTRnPfC7ZePHTUYMe1BbaNceZxlSOmjdAc0Mw15jKT7ThTbcFjUGUYxQtGcMqbtlw8YMp
        TxSNheXfl4hhPDuMN/ysQwCAs4xgCZ143W19S1pqUYnlRPObzczCYnTkdYnJt4JoNgg8ooAiAMAB+jOf
        7jRyK++UiRbUZB4T2Gnu06Ia+WjNm8LoZhy/MZbl1tjVrBKFT2QzO5nNW7zk1hHKRQ/qMo1pHLP44mf9
        264RmXw7mEAMF60yXCulYe6xko3Up4dg+grzIU34lnlcsOjip+dFelJL6MsftR6FrZaHu84MVgs30CDK
        8CXNGcsyy5mFIZQXvsQALlrzJWbFROw5vmSp0IQKpSYVrWJCPcIzQjMW4JZ1zVirZuIPMoD5dKWZWycq
        I82oQQzj2WlUqYQEEbShk7AzL471jGEVt6050dYtxXhALLuIEYZRchLFq0xniplhFLLRmCgqCErbkviT
        cSywcijL2rU491nFRkkgtRADaPQokGo0MvCSMJgNcMQOwWzrF2PdYCa/0IquArOwFCNozliWctPQeatI
        FI2EZdrnmce37LL87NqkGu8vRrGc9rR1e+BbKNUpz0rG8Sv3DRlPCbrQSlimfYMlRLPJiHqeQCEAwCE+
        YD5RNHNbNZSRptRkAePZprNZWIC2dBQK1txnHWNZZZ9KZzvV4yaxnV7MpSd13FbUhNOZOnzPFA7rNILs
        NCFKeDDEA7YzngVcttGc2q4gO45f2CwpqSxIfxoykTmc1/iTw3iZHtQQmnyHmcJ0TtlsPm1ZkX+TOaym
        JV0o7bbgNJLhtGAci7mh2SxVpjv1hYI155nNRPbYcC5t25JxkTEspz3t+Ifbb1WVZ2lBNOu45/NnRdKZ
        VkLBmussYaxdTD7/IQDAUQbzA11pTi43v81AQ17gB8axjUSvP6MgbekoFKy5z1pG27u5zd5NWUn8yX+Y
        R09ecSsukZ1O1GEGkznoxd3DaUo34RGxiWxlPAu5YusZ9IOuvDjWsIW6dKea20MsCvBfGjCJ2Zz14K4Z
        eYUoqgsFaw4wmRmcsf3s+Ulb5i1iWEtzulHGrVlYgi9owVgWCUrRUyKUKnSnnrCF8iyzmMQ+v5g5P+rL
        vcQ4VvAGHdyahSFUpgwtGMtqqVkYRCRdaEVuwe+vs4hxbPbBqnAIoCOOM5SFdKWF2wXMQH2qsZBxxAoW
        sBBv0EEoWHOPNYxhNXf9acr8rTM/iZ28QwxRvOZ2C89GB2ozi8lPbOE5aU43SgtNvi2MYxHX/Gy+/FKa
        IZ61bKEuUVR3axZG0JcGKYy4jNSlh8CIBNjPJGZ6ZEQ6BDAZt5nPWprRTSBC9Qyf0IyxLOQ2VenOa0KN
        wjPMYDIH/HSe/Fqc5TITWMEbdHT7Vg+hEqVpyXnqCU2+q/zABKHF4BDABjjJxywUhnLT86rwL+/yM9Gs
        MajCwDT4v0ZfErvpSwtmeZAaSuQ3utKOFf6+/P6/A7iQwAa2UZuektjeY+xlErM4FxAzE0ACbXdYxHpp
        dB/gNN8zmUMBMysBptB3hYmsEopXXmEBE4wTZbQGAk+n9ySf0JgvU9Xqx/EjrXmLLYG1/IG2AzzEXvqR
        nQ7JfnKQtwJGpTDAdwAXElIVccT5sWJxQqrsxd3kcY3AlWoPCphvGkdsip7k2ORkD2St/sBBDMse/fcv
        zEz+q0DV6Q4snKEnsVQjmD+YzHGHAIGHEwwhC3AjtUCFQwBzEEYWErliYJopyX05nEMAMxa/Nu0oxW1W
        Em12L5FDAGMRQpVkPUblKEKUuYXljhdgJCIZxtwUZ6I3oI6zAwQGCtKODk/0GKU3+7AchwBGIIekOO2G
        uUNzCKA/ajCAGoKC05OscQjg33iWcRQX/O4kg9lm0DieIpJg9qQMAzkE0BtBtBYs/zUWEU2sIennYFrS
        jyLACYYxI3kru0MAfRHmVk3o7t9t5fcMGkVVhv+tYlqSLzjHKocARiHuCZHIRDYzlkUGGn9BNE4mYpub
        pqx+vAc4BNAX8SykaTIB6f1M5HsuEUkJbrPVkAbz9Kk0l58i/WOpbYcAemMVH/Iu+YGzzGESh4nkAxqT
        k0T28CHLDdgBUrqfwclrIRwC6I04xrCaZ0liK/spyCDaP2pgr8hwjpurNOAQQH88YA97gHC6EZVK2awE
        tR0CBAIy8SpRbvuP85g7MIcA+iOUqrxFXbfqpgkccQjg30jPu/zHrZAdwAZWOgTwb9TnfwLtgTss5yOz
        lcYcAuiLUOq5Xf5E/mAsS8zOBToE0J8A2dz8dDeTmW2N/mMjCJCYqhLVHqd/aoO77KVxip+cZDrfCQTt
        U8+MAYki/UvCMvBcqqcgXHiWtv8hiZlsf/Svy0ygCYOE5xnkTLEe6ajg9nAMG+0A2alBG15KdfRbC9LZ
        WV/bQ+yhK72pAmxkKuuEZx0Wpj0dUshXpGMg9ZjDEo4btWsOJinZdYoCPtyrAF34hZsp7vj4OseXplbD
        BROdYjxbyanjp6UngvzCoyYgD2/xp2CmEtjNUMq6PR5DHcKISXHH5UIRXI0IEEJJBrKdOMFXengdor/w
        eHX/IoAMmWnFWsW5OsUEagml7CxEgAxU5SuO8kDhC7muRGLpov97zrIESMtLLOCWqrlK4go/0NKLcUoJ
        oKUNkI0XaMPLwqiXu2Uozzc0t9c5W5pRsIzwDDT3yE5j6hDLHJZqdxylVgSIoC6tqSzdpBLcflo66lCZ
        pYzj9wAxCwGK0p52bk9BFM+U62muzvN0ZwEL2K1FZ6HvBAjmnzSlBZFSM+Uyq/mZ52ns9qzNLLShFnOY
        aIezNn1GHlrTRWgCx/M7cylKQwoLRCzSEEkk7VnKXLZou3N6agOkpzIjOazwxj/BGGoQhkuwfSl3hf/n
        YQYKnwptYZYNkIV/s554wfd/wE56kQcI5hn+S6yCcXiJeYLz1VPuGroYgVmpx3TOSwcYzy6GUCbFPpON
        DmwkQTgF2+hqwGKYQYB01GEht4WzdZyPUqkaR/Amq7ghnePbrKE7BY0lQD7aqxjYOnoInucI+rJX+Jf3
        +ZmmXro8ViVAMBX5lsvC73yRsYLWsWw0YCYXFB60HQyipOCFrikBginGe2zhnnRAl1lASwX79hk+57Tw
        DjeZS00fgh/WIkAxPuWk8LveIoZawrMK4KFzfUThVXuMb3iBDPoRIB2VGMZBEhVCFuOp6bb6JTVCqMQU
        rgjvdIExgkOg7ESAfLzDbuF3jGMNLVXtdiH8i/6K4bWLzKZJKqtAEwJk5hWmcU764d4ELdPzKku4I7zn
        ET50ewiUPQiQldf5TWLy/UlPD6Im8DDALg8d3WI1XZOtnQ8EcPWT5KUdS7km/dA7bKAX//Dqec3KG9Jp
        2k5P4ZEO1iVAel7lR12onZ3GzOGidD3i2M4AShACZPCWACd5isL0YaPCG/8qi2nlIZM93yhbaGoW6ksA
        /V9uGajGaI5L1+UBR/iaKoQzzzsCXGUi+xTf+BN4WaOlKcbnnJJsbPOoKTWVrEKA4nwhMW9vMEsj8zYN
        kXzITuHe6br+IoYd3hFAKZGzj08op6mlHkIlJkqcpQuMpawmZqFeBMhPH/ZJHNxfaKrKQFaPgkSxVnVC
        SSMC3OV3/iMMVfoGpXDJMYYIj3Y0lwDZaM/v0hBXN518jXCaMpdLxhDgGktoq3M/i9qAqXUIYH6QO4ya
        RHNCXwKcYTK1xX+uKfLSm10Ss3AdrX0YiZYECKEyUyVe0nlGUcqQOUtDaQazU7gL+UCAePbzGRU0M8LU
        oSgfSyNo83nZyxFpR4DiDOeMcIzXmUkNHSOa7lCIHqyTOKASAgwQxpc+4GlTFPaDqSA1Cy8xlnJejEwb
        AjzF/zggHNs9VtDQpAro7LQVutWLxV5bK4HHf5c5hvP4MdJRhx+kZuHQJwQY9SdAOJ3YInSSE9nCm4qJ
        Wv1QjM+FCaSR4maA3KyQBi/KmnbORhbasFbi8e7kbY/MQt8IEEZDVkpMvoP8z7RyV4jgPfZLHpfnZX9c
        khjJ2+MogzVwwbxFHt6WmIXxrKN1MhVevQiQhmrM5LpwHGcZQQnT5ig7ndgkcUU3U1/pIdbfBfMFRRjC
        MUkNwkLqSOrvfSdAJCM5K3GRv+d5QkyaGzWuaEEtnjVfXTDfEEQ5oiUFEpeZREXFljdvCFCQ/hyUmnwN
        TGt6C6GK1q5oUYZKkg23mE9tFefw6oO0vEiMsOsoiVN86vZsUO8JEE5nqcm3iU4mmnwlGKHgir7gTflv
        MOUYLwkwXuZbKph24kAmmrOG+8LR7eFd8mlCgDAasUqSEd1PPxNNvgL0k7qiK2nsy76k1Ltygo89dsG0
        Qy6i2C4slEpgA2+4LUNXT4BQqjNLYvKdYTj/Mu37Z6cTmyX7UixdtNiXlLrXdtGbvKZNwtMM4qikUOVH
        XnNjFqohQBClGCWpe77GVKqYZvKF0ZAVEpNP487LXPTkT+GzFs/6FAehGIsgyjCavyQFK1N4LtVCKROg
        EAM5IsmHLqOemwJMY5CGasyQuqIj9ei9LswQybN2m0W8osoF0wOh1GSOxCw8zec8o5oAOejKVuHWmsBG
        OriVfjEGkXwlqc50uaI66T4EUVbqgl1hEhVN2xQz0oyfJGbhPvo+Us0WE8CTuxiPgvTnkNQVra+3K6rs
        gn3mViPfGKh9dt0TwNN9xFjIXdEEI13RTDTnFwUXLL9pE6Xm7Z2R0Sl+GktuSnlsSRi5uzVVcEXfN3pf
        ykl3iVmYwO+0NdEsjOQbif1+lWn8nOInR/iawxJfYrFbX8IYhFKDWZJGvDMMM8sVlbtgt02eNnnSJiGV
        z5wkiSaYSeVSjJLsS+a6okAQpRktfdbM3DiVYnjKlzyeqDfkL7M7/GiiK5riWasu3aJO84VlTSfZpZxR
        0BM5FczZP2hvoiv6BDLSVMF5et9k5+mgR4uvLqeo32w2kxrZ++hropEthJILtsnU8ElJaSb/yaoCszKd
        1nZFVTxrAyXWtNkB1KpMV2hytXZQ+4qpFpXqL6EUqpymX6hSERmkKRRz01qFGSxNay2mrmk+lcfPWjVm
        SszCs4w0tW6uI5tTFb094Lipie3c9JAm2zbQVpDYtizCaMJP0tjVeyaahYVYSspy1xdMq3hOQ2PWWTbd
        7hNy0IVYqVnY0aT3bdAToWDzCrraSRpfTvCxia6oJijIAEn+6i5TTKkxto5YdF5iBXNzifGUN80V1RQl
        GCF0wR4wwITN1zoEeM7t83+bhdQ2uBNTV4RIalg2JDtcOfAIUPYJty+edbQyzRXVEa6GqifNwu0+6gvZ
        mwCZWZRiP9zhYZObzRBOJzalMgunm+DdWocAUIHf/nYAjzHUxNY7w5Cykv0w1U0YgxkEEAe/nqYHw+hD
        af8w+dSgBJ+ymT3MpIYpn280AYrRh4kMo5ZzUuPjJchBHmFeIII6vOal8KTVCJCPd9nz9yZ/ge6B85R7
        iyCaEMsNbrKXAWr7WS1KgKy0S6UcdpwyzhLLUSlZA3gisXTV4VgpIwjgXiw2gW7OEsvxcaopu89Pmssr
        6k0Al1jsVbeBr55WmmzrmSShT9S6pOVlnmMZ0fxBvC0oXJw3aSNIdV1MdpSsA7cQidX9xTeU1sgs1G8H
        iOA9iVjsHYb4U4BXH5SVSBwdYRBPW5YA2aXnISWylU4BdHC2D6jNBolK0TaifA4ea0+A9NRnmVShZ4BB
        J6L5BeTnB9xXfdCKMQQI4TmByee6zvON4/x5DuWjll72+n2qJQGKM0x6PsBsE0U2bY5gKjBBKhQ7nme9
        iqxpRYAI3pdYLPf5mSYaO7ABByWh2ONeZdC0IEA2RZOvqykno/shtBev9JUAGWggFWU8RH+dgtgBizz0
        YqdwwuP41QOhWN8IEKLQYHKer4l0FkwPFJGKV7rq6NS1dHlPAFl9YxLXmeGdKKMDtU+uNuKV3hGgAP2k
        YrEraeQEevSHGvFKpVp6zwkQriDKuJnOJvYWBBwy0YI10m6ad6TCDp4RIIxGbstZH14HTBWLDVjk8qGf
        Tj0BTBJldKAOSh21IvFKtQQwUZTRgTooi1dOdiNeqYYAhaSijHdZRn0rKPQ4cIlXzpWKV36eSrxSiQBq
        1E6yB9IUWx/Kujp9ktUayQigpHe031S9IwcS5FQ4P+CPR+cHiAigpHhm7vkADlTgaQYpaOu5xCvHpCJA
        OCiIMl7lO3NFGR2oQ5DiQk6hKhNS/GwbFflAFXEc2AKh1FQQrzyRylc4IBVltJ1CjwNlY07dldJ4dGAz
        yN05petJ99GBDSEP6HgWQHJgU8hDuupDyA5sC6Wkjq1FGR2ogyute1ey/LsV0sgObA9xYYcfiDI6UIcn
        S7vMPQfZgQkowXBOkkASV1hg4knoJiMoML82AGmoyItkIJa1XA/USfh/UlkuWwmH17QAAAAASUVORK5C
        YII=
</value>
  </data>
</root>